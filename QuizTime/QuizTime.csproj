<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.0</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <DocumentationFile>bin\Debug\netcoreapp2.0\QuizTime.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.All" Version="2.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.SignalR" Version="1.0.0-alpha2-final" />
    <PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="2.0.0" />
    <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="5.2.1" />
  </ItemGroup>

  <ItemGroup>
    <DotNetCliToolReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Tools" Version="2.0.0" />
  </ItemGroup>

  <ItemGroup>
    <!-- Files not to publish (note that the 'dist' subfolders are re-added below) -->
    <Compile Remove="wwwroot\dist\Semantic-UI-CSS-master\**" />
    <Content Remove="ClientApp\**" />
    <Content Remove="wwwroot\dist\Semantic-UI-CSS-master\**" />
    <EmbeddedResource Remove="wwwroot\dist\Semantic-UI-CSS-master\**" />
    <None Remove="wwwroot\dist\Semantic-UI-CSS-master\**" />
  </ItemGroup>

  <ItemGroup>
    <Content Remove="Views\Shared\_Favicons.cshtml" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\app\components\createquiz\createquiz.component.ts" />
    <None Remove="ClientApp\app\components\fetchresults\fetchresults.component.ts" />
    <None Remove="ClientApp\app\components\groupmanagement\groupmanagement.component.ts" />
    <None Remove="ClientApp\app\components\groupmanagement\groupquizzes.component.ts" />
    <None Remove="ClientApp\app\components\groupmanagement\groupresults.component.ts" />
    <None Remove="ClientApp\app\components\home\android-chrome-192x192.png" />
    <None Remove="ClientApp\app\components\joinsession\joinsession.component.ts" />
    <None Remove="ClientApp\app\components\quizdetail\quizdetail.component.ts" />
    <None Remove="ClientApp\app\components\registration\auth.service.ts" />
    <None Remove="ClientApp\app\components\revision\revision.component.ts" />
    <None Remove="ClientApp\app\components\revision\school.png" />
    <None Remove="ClientApp\app\components\sessionboard\board.component.ts" />
    <None Remove="ClientApp\app\components\sessionboard\sessionboard.component.ts" />
    <None Remove="ClientApp\app\components\settings\settings.component.ts" />
    <None Remove="ClientApp\app\data\config.repository.ts" />
    <None Remove="ClientApp\app\data\repository.module.ts" />
    <None Remove="ClientApp\app\data\repository.ts" />
    <None Remove="ClientApp\app\models\choice.model.ts" />
    <None Remove="ClientApp\app\models\group.model.ts" />
    <None Remove="ClientApp\app\models\groupResults.model.ts" />
    <None Remove="ClientApp\app\models\quiz.model.ts" />
    <None Remove="ClientApp\app\models\report.model.ts" />
    <None Remove="ClientApp\app\models\result.model.ts" />
    <None Remove="ClientApp\app\models\session.model.ts" />
    <None Remove="ClientApp\app\models\user.model.ts" />
    <None Remove="Properties\PublishProfiles\quizztime - Web Deploy.pubxml" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="ClientApp\app\components\createquiz\school.png">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Include="ClientApp\app\components\home\android-chrome-192x192.png">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
    <Content Include="ClientApp\app\components\revision\school.png">
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
    </Content>
  </ItemGroup>

  <ItemGroup>
    <None Include="Views\Shared\_Favicons.cshtml" />
  </ItemGroup>

  <ItemGroup>
    <TypeScriptCompile Include="ClientApp\app\components\createquiz\createquiz.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\fetchresults\fetchresults.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\groupmanagement\groupresults.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\groupmanagement\groupquizzes.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\groupmanagement\groupmanagement.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\joinsession\joinsession.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\joinsession\participantboard.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\quizdetail\quizdetail.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\registration\auth.service.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\registration\register.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\revision\revision.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\sessionboard\board.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\sessionboard\sessionboard.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\components\settings\settings.component.ts" />
    <TypeScriptCompile Include="ClientApp\app\data\config.repository.ts" />
    <TypeScriptCompile Include="ClientApp\app\data\repository.module.ts" />
    <TypeScriptCompile Include="ClientApp\app\data\repository.ts" />
    <TypeScriptCompile Include="ClientApp\app\models\choice.model.ts" />
    <TypeScriptCompile Include="ClientApp\app\models\group.model.ts" />
    <TypeScriptCompile Include="ClientApp\app\models\groupResults.model.ts" />
    <TypeScriptCompile Include="ClientApp\app\models\quiz.model.ts" />
    <TypeScriptCompile Include="ClientApp\app\models\report.model.ts" />
    <TypeScriptCompile Include="ClientApp\app\models\result.model.ts" />
    <TypeScriptCompile Include="ClientApp\app\models\session.model.ts" />
    <TypeScriptCompile Include="ClientApp\app\models\user.model.ts" />
  </ItemGroup>

  <Target Name="DebugRunWebpack" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('wwwroot\dist') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />

    <!-- In development, the dist files won't exist on the first run or when cloning to
         a different machine, so rebuild them if not already present. -->
    <Message Importance="high" Text="Performing first-run Webpack build..." />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js" />
    <Exec Command="node node_modules/webpack/bin/webpack.js" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec Command="npm install" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --config webpack.config.vendor.js --env.prod" />
    <Exec Command="node node_modules/webpack/bin/webpack.js --env.prod" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="wwwroot\dist\**; ClientApp\dist\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>


  <ItemGroup>
    <DotNetCliToolReference Include="Amazon.ElasticBeanstalk.Tools" Version="1.1.0" />
  </ItemGroup>
</Project>
